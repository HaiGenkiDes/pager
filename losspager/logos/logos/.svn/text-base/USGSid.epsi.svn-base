%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(r) 6.0
%%For: (Maura Hogan) (U.S. Geological Survey)
%%Title: (USGSid_box.eps)
%%CreationDate: (8/4/97) (6:22 PM)
%%BoundingBox: 57 449 568 641
%%HiResBoundingBox: 57.0274 449 568 640.9658
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI6_vars Adobe_Illustrator_AI6
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 2.0
%AI3_ColorUsage: Black&White
%%CMYKCustomColor: 1 0 0.79 0.27 (PANTONE 348 CV)
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set)
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 ()
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 33 582 761
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -126 780 1 827 581 58 0 1 2 40
%AI5_OpenViewLayers: 7
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 23 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.0 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 17 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
	
	/initialize
	{ 
		Adobe_ColorImage_AI6 begin
		Adobe_ColorImage_AI6
		{
			dup type /arraytype eq
			{
				dup xcheck
				{
					bind
				} if
			} if
			pop pop
		} forall
	} def
	/terminate { end } def
	
	currentdict /Adobe_ColorImage_AI6_Vars known not
	{
		/Adobe_ColorImage_AI6_Vars 14 dict def
	} if
	
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 0 def
		/sourcecount 0 def
		/sourcearray 4 array def
		/plateindex -1 def
		/XIMask 0 def
		/XIBinary 0 def
		/XIChannelCount 0 def
		/XIBitsPerPixel 0 def
		/XIImageHeight 0 def
		/XIImageWidth 0 def
		/XIImageMatrix null def
		/XIBuffer null def
		/XIDataProc null def
 end
	
	/WalkRGBString null def
	/WalkCMYKString null def
	
	/StuffRGBIntoGrayString null def
	/RGBToGrayImageProc null def
	/StuffCMYKIntoGrayString null def
	/CMYKToGrayImageProc null def
	/ColorImageCompositeEmulator null def
	
	/SeparateCMYKImageProc null def
	
	/FourEqual null def
	/TestPlateIndex null def
	
	currentdict /_colorimage known not
	{
		/colorimage where
		{
			/colorimage get /_colorimage exch def
		}
		{
			/_colorimage null def
		} ifelse
	} if
	
	/_currenttransfer systemdict /currenttransfer get def
	
	/colorimage null def
	/XI null def
	
	
	/WalkRGBString
	{
		0 3 index
	
		dup length 1 sub 0 3 3 -1 roll
		{
			3 getinterval { } forall
	
			5 index exec
	
			3 index
		} for
		
		 5 { pop } repeat
	
	} def
	
	
	/WalkCMYKString
	{
		0 3 index
	
		dup length 1 sub 0 4 3 -1 roll
		{
			4 getinterval { } forall
			
			6 index exec
			
			3 index
			
		} for
		
		5 { pop } repeat
		
	} def
	
	
	/StuffRGBIntoGrayString
	{
		.11 mul exch
		
		.59 mul add exch
		
		.3 mul add
		
		cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/RGBToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin 
			sourcearray 0 get exec
			dup length 3 idiv string
			dup 3 1 roll 
			
			/StuffRGBIntoGrayString load exch
			WalkRGBString
	 end
	} def
	
	
	/StuffCMYKIntoGrayString
	{
		exch .11 mul add
		
		exch .59 mul add
		
		exch .3 mul add
		
		dup 255 gt { pop 255 } if
		
		255 exch sub cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/CMYKToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
			sourcearray 0 get exec
			dup length 4 idiv string
			dup 3 1 roll 
			
			/StuffCMYKIntoGrayString load exch
			WalkCMYKString
	 end
	} def
	
	
	/ColorImageCompositeEmulator
	{
		pop true eq
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
		}
		{
			Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
			{
				Adobe_ColorImage_AI6_Vars begin
					sourcearray 0 3 -1 roll put
				
					channelcount 3 eq 
					{ 
						/RGBToGrayImageProc 
					}
					{ 
						/CMYKToGrayImageProc
					} ifelse
					load
			 end
			} if
			image
		} ifelse
	} def
	
	
	/SeparateCMYKImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
	
			sourcecount 0 ne
			{
				sourcearray plateindex get exec
			}
			{			
				sourcearray 0 get exec
				
				dup length 4 idiv string
				
				0 2 index
				
				plateindex 4 2 index length 1 sub
				{
					get 255 exch sub
					
					3 copy put pop 1 add
					
					2 index
				} for
	
				pop pop exch pop
			} ifelse
	 end
	} def
		
	
	/FourEqual
	{
		4 index ne
		{
			pop pop pop false
		}
		{
			4 index ne
			{
				pop pop false
			}
			{
				4 index ne
				{
					pop false
				}
				{
					4 index eq
				} ifelse
			} ifelse
		} ifelse
	} def
	
	
	/TestPlateIndex
	{
		Adobe_ColorImage_AI6_Vars begin
			/plateindex -1 def
	
			/setcmykcolor where
			{
				pop
				gsave
				1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
				grestore
	
				1 0 0 0 FourEqual 
				{ 
					/plateindex 0 def
				}
				{
					0 1 0 0 FourEqual
					{ 
						/plateindex 1 def
					}
					{
						0 0 1 0 FourEqual
						{
							/plateindex 2 def
						}
						{
							0 0 0 1 FourEqual
							{ 
								/plateindex 3 def
							}
							{
								0 0 0 0 FourEqual
								{
									/plateindex 5 def
								} if
							} ifelse
						} ifelse
					} ifelse
				} ifelse
				pop pop pop pop
			} if
			plateindex
	 end
	} def
	
	
	/colorimage
	{
		Adobe_ColorImage_AI6_Vars begin
			/channelcount 1 index def
			/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
	
			4 sourcecount add index dup 
			8 eq exch 1 eq or not
	 end
		
		{
			/_colorimage load null ne
			{
				_colorimage
			}
			{
				Adobe_ColorImage_AI6_Vars /sourcecount get
				7 add { pop } repeat
			} ifelse
		}
		{
			dup 3 eq
			TestPlateIndex
			dup -1 eq exch 5 eq or or
			{
				/_colorimage load null eq
				{
					ColorImageCompositeEmulator
				}
				{
					dup 1 eq
					{
						pop pop image
					}
					{
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							gsave
							
							0 _currenttransfer exec
							1 _currenttransfer exec
							eq
							{ 0 _currenttransfer exec 0.5 lt }
							{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
							
							{ { pop 0 } } { { pop 1 } } ifelse
							systemdict /settransfer get exec
						} if
						
						_colorimage
						
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							grestore
						} if
					} ifelse
				} ifelse
			}
			{
				dup 1 eq
				{
					pop pop
					image
				}
				{
					pop pop
	
					Adobe_ColorImage_AI6_Vars begin
						sourcecount -1 0
						{			
							exch sourcearray 3 1 roll put
						} for
	
						/SeparateCMYKImageProc load
				 end
	
					systemdict /image get exec
				} ifelse
			} ifelse
		} ifelse
	} def
	
	/XI
	{
		Adobe_ColorImage_AI6_Vars begin
			gsave
			/XIMask exch 0 ne def
			/XIBinary exch 0 ne def
			pop
			pop
			/XIChannelCount exch def
			/XIBitsPerPixel exch def
			/XIImageHeight exch def
			/XIImageWidth exch def
			pop pop pop pop
			/XIImageMatrix exch def
			
			XIBitsPerPixel 1 eq
			{
				XIImageWidth 8 div ceiling cvi
			}
			{
				XIImageWidth XIChannelCount mul
			} ifelse
			/XIBuffer exch string def
			
			XIBinary
			{
				/XIDataProc { currentfile XIBuffer readstring pop } def
				currentfile 128 string readline pop pop
			}
			{
				/XIDataProc { currentfile XIBuffer readhexstring pop } def
			} ifelse
			
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			
			XIMask
			{
				XIImageWidth XIImageHeight
				false
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
				
				imagemask
			}
			{
				XIImageWidth XIImageHeight
				XIBitsPerPixel
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				XIChannelCount 1 eq
				{
					
					gsave
					0 setgray
					
					image
					
					grestore
				}
				{
					false
					XIChannelCount
					colorimage
				} ifelse
			} ifelse
			grestore
	 end
	} def
	
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
8 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green & Blue)
(Green & Blue) 0 2 Bd
[
<
99999A9A9B9B9B9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A5A5A5A6A6A7A7A7A8A8A9
A9A9AAAAABABABACACADADADAEAEAFAFAFB0B0B1B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B9
B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9
C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9
D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1E2E2E3E3E3E4E4E5E5E5E6E6E7E7E7E8E8E9
E9E9EAEAEBEBEBECECEDEDEDEEEEEFEFEFF0F0F1F1F1F2F2F3F3F3F4F4F5F5F5F6F6F7F7F7F8F8F9
F9F9FAFAFBFBFBFCFCFDFDFDFEFEFFFF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3B3B
3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F5050515253535455565657585959
5A5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F7071717273747475767777
78797A7A7B7C7D7D7E7F80808182828384858586878888898A8B8B8C8D8E8E8F9091919293949495
96979798999A9A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7A8A9A9AAABACACADAEAFAFB0B1B2B2B3
B4B5B5B6B7B8B8B9BABBBBBCBDBEBEBF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
[
1 0.75 0 0 1 50 100 %_Bs
0.6 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Pink, Yellow, Green)
(Pink, Yellow, Green) 0 3 Bd
[
<
00000000000000000000000000000000000000010101010101010101010101010101010101010101
01010101010202020202020202020202020202020202020202020203030303030303030303030303
03030303030303030404040404040404040404040404040404040404050505050505050505050505
05050505050505060606060606060606060606060606060606060707070707070707070707070707
07070707080808080808080808080808080808080809090909090909090909090909090909090A0A
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0D0D0D0D0D
>
<
050506060606070708080809090A0A0A0B0B0C0C0D0D0E0E0F0F1010111112121313141415151617
17181819191A1A1B1C1C1D1D1E1F1F202021222223232425252626272828292A2A2B2C2C2D2D2E2F
2F3031313233333435353637373839393A3B3B3C3D3E3E3F4040414242434445454647474849494A
4B4C4C4D4E4F4F505151525354545556575758595A5A5B5C5C5D5E5F5F6061626363646566666768
69696A6B6C6C6D6E6F707071727373747576777778797A7B7B7C7D7E7F7F80818283838485868787
88898A8B8B8C8D8E8F8F9091929394949596979898999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A7A8
A9AAABACADADAEAFB0B1B2B2
>
<
CCCCCBCBCBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C2C2C1C1C0C0BFBEBEBDBDBCBBBBBAB9B9B8B7
B7B6B6B5B4B4B3B2B1B1B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9C9C9B
9A999998979696959493929291908F8E8E8D8C8B8A8A8988878686858483828181807F7E7D7C7C7B
7A7978777776757473727171706F6E6D6C6B6A6A69686766656463636261605F5E5D5C5B5B5A5958
5756555453525151504F4E4D4C4B4A49484746464544434241403F3E3D3C3B3A3938383736353433
3231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A191817161514131211100F0E0D0C
0B0A09080706050403020100
>
0
1 %_Br
<
737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A59585756555453525150504F4E
4D4C4B4A4949484746454443434241403F3E3E3D3C3B3A3A393837363635343333323130302F2E2D
2D2C2B2A2A29282827262525242323222121201F1F1E1D1D1C1C1B1A1A1918181717161615141413
1312121111100F0F0E0E0D0D0C0C0C0B0B0A0A090908080807070606060505050404040303030202
020201010101010000000000
>
<
00000000000000000000000001010101010101010101010101010101010101010101010102020202
02020202020202020202020202020202020202020202030303030303030303030303030303030303
03030303030303030303030303040404040404040404040404040404040404040404040404040404
04040404040404040404050505050505050505050505050505050505050505050505050505050505
050505050505050505050505
>
<
BFBFBFC0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3
C3C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7
C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACA
CACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC
>
0
1 %_Br
[
0.05 0.7 0 0 1 50 100 %_Bs
0 0.02 0.8 0 1 57 36 %_Bs
0.45 0 0.75 0 1 37 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple, Red & Yellow)
(Purple, Red & Yellow) 0 3 Bd
[
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A
>
<
CCCCCCCDCDCDCDCDCECECECECECFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D3D4D4D4
D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDC
DDDDDDDDDDDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5
E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDED
EDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5
F6F6F6F6F6F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFCFCFCFDFDFDFDFDFEFE
FEFEFEFFFFFF
>
0
1 %_Br
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBE
BDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796
9594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E
6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746
4544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E
1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
E5E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9EAEAEAEA
EAEAEAEAEAEBEBEBEBEBEBEBEBEBECECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEE
EEEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3
F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7
F7F7F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFFFFFFFFFF
>
<
00010203040405060708090A0B0C0C0D0E0F10111213141415161718191A1B1C1D1D1E1F20212223
242525262728292A2B2C2D2D2E2F30313233343535363738393A3B3C3D3D3E3F4041424344454546
4748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5E5E5F60616263646566666768696A
6B6C6D6E6E6F70717273747576767778797A7B7C7D7E7F7F80818283848586878788898A8B8C8D8E
8F8F90919293949596979798999A9B9C9D9E9F9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFAFB0B1
B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C8C9CACBCC
>
0
1 %_Br
[
0 0.04 1 0 1 50 100 %_Bs
0 1 0.8 0 1 50 50 %_Bs
0.9 0.9 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060606070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_Bs
1 1 0 0 1 50 80 %_Bs
1 0.0279 0 0 1 50 60 %_Bs
1 0 1 0 1 50 40 %_Bs
0 0 1 0 1 50 20 %_Bs
0 1 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar)
(Steel Bar) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 70 %_Bs
0 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_Bs
0 0.55 0.9 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Purple Radial)
(Yellow & Purple Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 1 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Pink, Yellow, Green) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Purple Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
Bb
2 (Rainbow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
Bb
2 (Steel Bar) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
Bb
2 (Purple, Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
Bb
2 (Green & Blue) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
*u
0 O
0 g
6772 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
294.8567 636.0513 m
294.8567 544.8434 L
294.8567 525.6041 283.9901 505.2962 251.2124 505.2962 c
221.6408 505.2962 207.3899 520.6163 207.3899 544.8434 c
207.3899 636.0513 L
234.2891 636.0513 L
234.2891 546.6248 L
234.2891 530.7705 241.058 524.5353 250.856 524.5353 c
262.613 524.5353 267.9572 532.3733 267.9572 546.6248 c
267.9572 636.0513 L
294.8567 636.0513 l
f
*U
*u
338.5994 505.2962 m
305.2874 505.2962 299.0525 524.8916 300.4772 547.1591 c
327.377 547.1591 L
327.377 534.8673 327.911 524.5353 342.6968 524.5353 c
351.782 524.5353 356.2358 530.414 356.2358 539.1428 c
356.2358 562.301 302.081 563.7261 302.081 602.0265 c
302.081 622.1562 311.7008 638.1891 344.4782 638.1891 c
370.6649 638.1891 383.6693 626.4314 381.8879 599.5326 c
355.7012 599.5326 L
355.7012 609.1523 354.0977 618.9497 343.2314 618.9497 c
334.5023 618.9497 329.336 614.1398 329.336 605.2329 c
329.336 580.8276 383.4911 582.965 383.4911 542.528 c
383.4911 509.2154 359.0858 505.2962 338.5994 505.2962 c
f
*U
*u
519.4358 505.2962 m
486.1238 505.2962 479.8886 524.8916 481.3136 547.1591 c
508.2128 547.1591 L
508.2128 534.8673 508.7474 524.5353 523.5329 524.5353 c
532.6181 524.5353 537.0719 530.414 537.0719 539.1428 c
537.0719 562.301 482.9171 563.7261 482.9171 602.0265 c
482.9171 622.1562 492.5363 638.1891 525.3146 638.1891 c
551.501 638.1891 564.5051 626.4314 562.724 599.5326 c
536.5376 599.5326 L
536.5376 609.1523 534.9341 618.9497 524.0675 618.9497 c
515.3387 618.9497 510.1724 614.1398 510.1724 605.2329 c
510.1724 580.8276 564.3272 582.965 564.3272 542.528 c
564.3272 509.2154 539.9219 505.2962 519.4358 505.2962 c
f
*U
433.7474 555.3662 m
449.5811 555.3662 L
449.5811 526.9853 L
448.2629 526.4949 L
444.1658 525.0698 439.3559 524.001 434.9024 524.001 c
419.5823 524.001 415.6634 531.1268 415.6634 571.3862 c
415.6634 596.3262 415.6634 618.9497 432.4082 618.9497 c
445.4372 618.9497 448.1843 610.1591 448.4246 599.5326 C
475.2185 599.5326 L
475.4354 624.4896 459.3584 638.1891 434.0117 638.1891 c
390.0113 638.1891 388.4075 605.2331 388.4075 572.8115 c
388.4075 524.001 393.6995 505.0625 438.9473 505.0625 c
449.4404 505.0625 466.1471 507.4304 473.8646 509.5419 C
474.3275 509.6672 475.1621 510.1799 475.1621 510.8451 C
475.1621 514.3526 475.1621 574.7708 Y
433.7474 574.7708 L
433.7474 555.3662 L
f
U
u
*u
66.8021 467.9864 m
66.5375 466.9526 66.3722 465.9635 66.5339 465.2444 c
66.7409 464.5251 67.3388 464.1657 68.5976 464.1657 c
69.8558 464.1657 71.1068 464.9748 71.432 466.5032 c
72.4544 471.3131 61.0766 470.2341 62.6153 477.4712 c
63.6569 482.3712 68.8271 483.8549 72.9179 483.8549 c
77.2331 483.8549 80.7047 481.787 79.3031 476.8874 c
73.0997 476.8874 L
73.4345 478.4607 73.4552 479.4044 73.0916 479.8091 c
72.773 480.2138 72.2528 480.3035 71.5787 480.3035 c
70.1849 480.3035 69.2297 479.4044 68.9042 477.8762 c
68.1401 474.2799 79.3268 474.4595 77.7788 467.1773 c
76.9376 463.2215 73.0703 460.2545 67.8107 460.2545 c
62.2814 460.2545 58.8917 461.6483 60.5987 467.9864 C
66.8021 467.9864 l
f
*U
*u
93.9233 475.3139 m
94.64 478.6853 94.025 479.8091 92.0471 479.8091 c
89.3498 479.8091 88.6187 477.4265 87.6152 472.7067 c
86.1437 465.7835 86.4125 464.3007 88.7501 464.3007 c
90.728 464.3007 92.0543 466.0982 92.6849 469.0655 c
99.0236 469.0655 L
97.7144 462.9069 93.8237 460.2545 87.89 460.2545 c
79.7087 460.2545 79.6904 465.2444 81.2006 472.347 c
82.5188 478.5507 84.5456 483.8549 92.9072 483.8549 c
98.7512 483.8549 101.5232 481.2473 100.262 475.3139 C
93.9233 475.3139 l
f
*U
*u
106.9622 460.704 m
100.6238 460.704 L
105.4496 483.4056 L
111.788 483.4056 L
106.9622 460.704 l
f
113.6456 492.1448 m
112.5854 487.1552 L
106.2467 487.1552 L
107.3078 492.1448 L
113.6456 492.1448 l
f
*U
*u
403.5707 460.704 m
397.2323 460.704 L
402.0581 483.4056 L
408.3965 483.4056 L
403.5707 460.704 l
f
410.2541 492.1448 m
409.1936 487.1552 L
402.8549 487.1552 L
403.916 492.1448 L
410.2541 492.1448 l
f
*U
*u
119.192 471.0431 m
118.6187 468.3461 117.8483 464.3007 120.6356 464.3007 c
122.8829 464.3007 123.791 466.4582 124.1927 468.3461 c
130.6208 468.3461 L
130.0055 465.8735 128.7665 463.8506 126.9419 462.4571 c
125.162 461.0636 122.7422 460.2545 119.7755 460.2545 c
111.5939 460.2545 111.5759 465.2444 113.0858 472.347 c
114.4043 478.5507 116.4311 483.8549 124.7924 483.8549 c
133.3334 483.8549 133.1021 478.3256 131.3291 471.0431 C
119.192 471.0431 l
f
1 D
125.7458 474.5945 m
126.2138 476.7974 126.9728 479.9439 123.9608 479.9439 c
121.0394 479.9439 120.3575 476.5278 119.9465 474.5945 C
125.7458 474.5945 l
f
*U
*u
0 D
143.2838 481.1129 m
143.3738 481.1129 L
145.0625 483.1358 146.9234 483.8549 149.3063 483.8549 c
152.318 483.8549 154.5878 482.057 153.9188 478.9103 c
150.0488 460.704 L
143.7104 460.704 L
147.0359 476.3478 L
147.4658 478.3706 147.4406 479.9439 145.4183 479.9439 c
143.3951 479.9439 142.7009 478.3706 142.2707 476.3478 c
138.9455 460.704 L
132.6068 460.704 L
137.4329 483.4056 L
143.7707 483.4056 L
143.2838 481.1129 l
f
*U
*u
168.4454 475.3139 m
169.1621 478.6853 168.5468 479.8091 166.5686 479.8091 c
163.8713 479.8091 163.1405 477.4265 162.137 472.7067 c
160.6652 465.7835 160.9346 464.3007 163.2719 464.3007 c
165.2501 464.3007 166.5761 466.0982 167.2067 469.0655 c
173.5451 469.0655 L
172.2359 462.9069 168.3455 460.2545 162.4118 460.2545 c
154.2305 460.2545 154.2122 465.2444 155.7221 472.347 c
157.0409 478.5507 159.0674 483.8549 167.4287 483.8549 c
173.2727 483.8549 176.045 481.2473 174.7835 475.3139 C
168.4454 475.3139 l
f
*U
*u
182.9255 471.0431 m
182.3519 468.3461 181.5818 464.3007 184.3688 464.3007 c
186.6167 464.3007 187.5248 466.4582 187.9265 468.3461 c
194.3543 468.3461 L
193.7393 465.8735 192.4997 463.8506 190.6748 462.4571 c
188.8952 461.0636 186.4757 460.2545 183.5087 460.2545 c
175.3277 460.2545 175.3091 465.2444 176.8193 472.347 c
178.1378 478.5507 180.1646 483.8549 188.5259 483.8549 c
197.0669 483.8549 196.8356 478.3256 195.0626 471.0431 C
182.9255 471.0431 l
f
1 D
189.4793 474.5945 m
189.9473 476.7974 190.7063 479.9439 187.6946 479.9439 c
184.7723 479.9439 184.0913 476.5278 183.6806 474.5945 C
189.4793 474.5945 l
f
*U
*u
0 D
221.6705 488.0991 m
219.1466 488.279 218.3969 487.29 217.9094 484.9973 c
217.4594 483.4056 L
220.4261 483.4056 L
219.5948 479.4944 L
216.6281 479.4944 L
212.6333 460.704 L
206.2952 460.704 L
210.2897 479.4944 L
207.4577 479.4944 L
208.289 483.4056 L
211.166 483.4056 L
212.4395 489.0821 213.5801 492.2351 220.3019 492.2351 c
221.0666 492.2351 221.7761 492.1901 222.5309 492.1448 C
221.6705 488.0991 l
f
*U
*u
219.6644 472.347 m
220.9829 478.5507 223.0097 483.8549 231.3707 483.8549 c
239.732 483.8549 239.5034 478.5507 238.1849 472.347 c
236.675 465.2444 234.5351 460.2545 226.3538 460.2545 c
218.1725 460.2545 218.1545 465.2444 219.6644 472.347 c
f
1 D
231.9227 472.7067 m
232.9262 477.4265 233.2079 479.8091 230.5109 479.8091 c
227.8139 479.8091 227.0825 477.4265 226.079 472.7067 c
224.6075 465.7835 224.8763 464.3007 227.2139 464.3007 c
229.5512 464.3007 230.4512 465.7835 231.9227 472.7067 c
f
*U
*u
0 D
249.5474 483.4056 m
248.9267 480.4835 L
249.0164 480.4835 L
250.7393 483.0905 253.0595 483.8549 255.6221 483.8549 c
254.4179 478.1909 L
248.9201 478.5507 248.1422 475.3139 247.6643 473.0666 c
245.0366 460.704 L
238.6982 460.704 L
243.524 483.4056 L
249.5474 483.4056 l
f
*U
*u
279.7559 464.9298 m
279.4595 463.5362 279.3332 462.0978 279.1721 460.704 c
273.2834 460.704 L
273.6539 463.7156 L
273.5639 463.7156 L
271.7183 461.3783 269.6366 460.2545 266.8943 460.2545 c
262.4891 460.2545 261.5681 463.5362 262.409 467.492 c
264.005 474.9992 269.8709 475.3139 275.7404 475.2239 c
276.1133 476.9771 L
276.524 478.9103 276.5507 480.3035 274.2581 480.3035 c
272.0552 480.3035 271.5221 478.6407 271.1396 476.8421 c
264.9362 476.8421 L
265.5191 479.5844 266.7461 481.3373 268.4489 482.3712 c
270.1172 483.4502 272.2709 483.8549 274.6985 483.8549 c
282.7451 483.8549 283.043 480.3935 282.164 476.258 C
279.7559 464.9298 l
f
1 D
268.67 467.7618 m
268.3256 466.1435 268.175 464.1657 270.2432 464.1657 c
273.9743 464.1657 274.46 469.2002 274.9856 471.6728 c
271.8104 471.5379 269.5301 471.8075 268.67 467.7618 c
f
*U
*u
0 D
304.8467 475.3139 m
305.5631 478.6853 304.9478 479.8091 302.9702 479.8091 c
300.2729 479.8091 299.5415 477.4265 298.538 472.7067 c
297.0665 465.7835 297.3356 464.3007 299.6732 464.3007 c
301.6511 464.3007 302.9777 466.0982 303.608 469.0655 c
309.9467 469.0655 L
308.6372 462.9069 304.7471 460.2545 298.8131 460.2545 c
290.6315 460.2545 290.6138 465.2444 292.1234 472.347 c
293.4422 478.5507 295.4687 483.8549 303.8303 483.8549 c
309.674 483.8549 312.4463 481.2473 311.1848 475.3139 C
304.8467 475.3139 l
f
*U
*u
350.7521 464.9298 m
350.4557 463.5362 350.33 462.0978 350.1686 460.704 c
344.2796 460.704 L
344.6501 463.7156 L
344.5604 463.7156 L
342.7151 461.3783 340.6331 460.2545 337.8905 460.2545 c
333.4853 460.2545 332.5646 463.5362 333.4055 467.492 c
335.0015 474.9992 340.8674 475.3139 346.7369 475.2239 c
347.1098 476.9771 L
347.5205 478.9103 347.5469 480.3035 345.2546 480.3035 c
343.0517 480.3035 342.5186 478.6407 342.1361 476.8421 c
335.9327 476.8421 L
336.5156 479.5844 337.7423 481.3373 339.4454 482.3712 c
341.1137 483.4502 343.2674 483.8549 345.6947 483.8549 c
353.7413 483.8549 354.0392 480.3935 353.1602 476.258 C
350.7521 464.9298 l
f
1 D
339.6665 467.7618 m
339.3224 466.1435 339.1718 464.1657 341.2394 464.1657 c
344.9705 464.1657 345.4562 469.2002 345.9818 471.6728 c
342.8066 471.5379 340.5266 471.8075 339.6665 467.7618 c
f
*U
*u
0 D
364.6658 481.1129 m
364.7555 481.1129 L
366.4445 483.1358 368.3057 483.8549 370.688 483.8549 c
373.6997 483.8549 375.9698 482.057 375.3008 478.9103 c
371.4305 460.704 L
365.0918 460.704 L
368.4176 476.3478 L
368.8478 478.3706 368.8226 479.9439 366.8 479.9439 c
364.7771 479.9439 364.0826 478.3706 363.6524 476.3478 c
360.3272 460.704 L
353.9888 460.704 L
358.8146 483.4056 L
365.153 483.4056 L
364.6658 481.1129 l
f
*U
*u
397.5182 483.4056 m
392.492 459.7601 L
392.1575 458.1866 390.9287 451.9832 382.2077 451.9832 c
377.4878 451.9832 373.6997 453.197 374.7404 458.7263 c
380.9441 458.7263 L
380.7434 457.7826 380.7062 456.9728 380.996 456.4338 c
381.2762 455.8491 381.9287 455.5346 382.9175 455.5346 c
384.4913 455.5346 385.5707 457.0181 386.0585 459.3108 c
386.9849 463.6712 L
386.8952 463.6712 L
385.5785 461.918 383.5892 461.0189 381.5213 461.0189 c
374.5538 461.0189 376.2251 467.402 377.3147 472.5269 c
378.3755 477.5165 379.8128 483.8549 386.4209 483.8549 c
388.6685 483.8549 390.3914 482.8661 390.8411 480.7532 c
390.9311 480.7532 L
391.4948 483.4056 L
397.5182 483.4056 l
f
1 D
384.6452 464.9298 m
386.9378 464.9298 387.7592 467.3123 388.7816 472.1222 c
389.8424 477.1121 390.2195 479.9439 387.8819 479.9439 c
385.4993 479.9439 384.7415 478.2809 383.27 471.3579 c
382.8206 469.245 381.5885 464.9298 384.6452 464.9298 c
f
*U
*u
0 D
418.7354 481.1129 m
418.8254 481.1129 L
420.5138 483.1358 422.375 483.8549 424.7573 483.8549 c
427.7693 483.8549 430.0394 482.057 429.3704 478.9103 c
425.5004 460.704 L
419.1617 460.704 L
422.4875 476.3478 L
422.9174 478.3706 422.8922 479.9439 420.8696 479.9439 c
418.8464 479.9439 418.1525 478.3706 417.7223 476.3478 c
414.3968 460.704 L
408.0584 460.704 L
412.8842 483.4056 L
419.2226 483.4056 L
418.7354 481.1129 l
f
*U
*u
451.5881 483.4056 m
446.5616 459.7601 L
446.2271 458.1866 444.9983 451.9832 436.2773 451.9832 c
431.5571 451.9832 427.7693 453.197 428.81 458.7263 c
435.0137 458.7263 L
434.813 457.7826 434.7758 456.9728 435.0659 456.4338 c
435.3461 455.8491 435.9986 455.5346 436.9877 455.5346 c
438.5606 455.5346 439.6403 457.0181 440.1275 459.3108 c
441.0545 463.6712 L
440.9648 463.6712 L
439.6481 461.918 437.6588 461.0189 435.5912 461.0189 c
428.6234 461.0189 430.295 467.402 431.3843 472.5269 c
432.4451 477.5165 433.8821 483.8549 440.4905 483.8549 c
442.7381 483.8549 444.4607 482.8661 444.9107 480.7532 c
445.0004 480.7532 L
445.5644 483.4056 L
451.5881 483.4056 l
f
1 D
438.7151 464.9298 m
441.0074 464.9298 441.8288 467.3123 442.8512 472.1222 c
443.912 477.1121 444.2891 479.9439 441.9518 479.9439 c
439.5689 479.9439 438.8111 478.2809 437.3393 471.3579 c
436.8902 469.245 435.6581 464.9298 438.7151 464.9298 c
f
*U
*u
0 D
461.4812 483.4056 m
467.777 483.4056 L
467.2577 466.3232 L
467.3459 466.3232 L
474.9014 483.4056 L
481.6337 483.4056 L
481.7186 466.3232 L
481.8065 466.3232 L
488.7143 483.4056 L
494.7896 483.4056 L
484.0238 460.704 L
477.3755 460.704 L
476.7251 475.7631 L
476.6369 475.7631 L
469.0388 460.704 L
462.3026 460.704 L
461.4812 483.4056 l
f
*U
*u
493.5137 472.347 m
494.8325 478.5507 496.8593 483.8549 505.2203 483.8549 c
513.5819 483.8549 513.3533 478.5507 512.0342 472.347 c
510.5246 465.2444 508.385 460.2545 500.2034 460.2545 c
492.0218 460.2545 492.0038 465.2444 493.5137 472.347 c
f
1 D
505.7723 472.7067 m
506.7758 477.4265 507.0575 479.8091 504.3605 479.8091 c
501.6632 479.8091 500.9321 477.4265 499.9286 472.7067 c
498.4568 465.7835 498.7262 464.3007 501.0635 464.3007 c
503.4011 464.3007 504.3008 465.7835 505.7723 472.7067 c
f
*U
*u
0 D
523.7573 483.4056 m
523.136 480.4835 L
523.226 480.4835 L
524.9489 483.0905 527.2691 483.8549 529.8314 483.8549 c
528.6275 478.1909 L
523.1297 478.5507 522.3518 475.3139 521.8739 473.0666 c
519.2459 460.704 L
512.9078 460.704 L
517.7336 483.4056 L
523.7573 483.4056 l
f
*U
328.1117 483.8549 m
325.7291 483.8549 323.8679 483.1358 322.1792 481.1129 C
322.0895 481.1129 L
324.4343 492.1448 L
318.0962 492.1448 L
311.4125 460.7042 L
317.7506 460.7042 L
321.0764 476.3478 L
321.5063 478.3706 322.2005 479.9439 324.2234 479.9439 c
326.2463 479.9439 326.2712 478.3706 325.8416 476.3478 C
322.5158 460.7042 L
328.8539 460.7042 L
332.7245 478.9103 L
333.3932 482.057 331.1231 483.8549 328.1117 483.8549 c
f
534.3254 492.1448 m
527.6417 460.7042 L
533.9801 460.7042 L
540.6638 492.1448 L
534.3254 492.1448 L
f
*u
1 D
555.5054 492.1448 m
553.1888 481.2473 L
553.0991 481.2473 L
552.2063 483.1808 550.7762 483.8549 548.4833 483.8549 c
542.1002 483.8549 540.7796 476.7974 539.8049 472.2122 c
538.811 467.537 537.0383 460.2545 543.6014 460.2545 c
546.029 460.2545 547.9445 461.0189 549.5816 463.2215 C
549.6716 463.2215 L
549.1361 460.7042 L
555.1598 460.7042 L
561.8438 492.1448 L
555.5054 492.1448 L
f
0 D
551.2775 472.257 m
550.0643 466.548 549.1526 464.1657 546.995 464.1657 c
544.7027 464.1657 544.8044 466.548 546.0179 472.257 c
546.983 476.7974 547.6073 479.9439 550.3493 479.9439 c
552.9569 479.9439 552.2426 476.7974 551.2775 472.257 c
f
*U
U
95.1272 592.9808 m
95.5772 592.5485 L
108.179 581.9936 121.7816 583.0178 132.1412 589.9067 c
138.6749 594.2517 168.2165 613.8968 184.9145 625.0007 C
184.9145 636.0908 L
60.4649 636.0908 L
60.4649 606.8034 L
68.0504 608.1165 80.2751 606.8289 95.1272 592.9808 C
f
141.9452 544.2557 m
127.2455 558.3539 L
125.1815 560.2358 123.4136 561.6153 123.0332 561.9086 C
111.0194 570.3461 99.8186 567.7823 94.9892 565.9853 c
93.5261 565.3985 92.1308 564.6029 91.1417 563.9822 C
60.4649 543.4616 L
60.4649 506.2826 L
184.9145 506.2826 L
184.9145 533.0379 L
182.1836 531.3029 165.3236 522.1811 141.9452 544.2557 C
f
94.0283 589.6548 m
93.3635 590.2727 92.6288 590.9331 91.9745 591.4715 c
77.2772 602.8437 63.3917 597.2789 60.4649 595.8899 C
60.4649 583.0911 L
67.6643 587.9423 L
78.7625 596.174 96.0311 587.7338 V
94.0283 589.6548 L
f
111.2147 573.1271 m
110.5679 573.6989 109.9172 574.289 109.2602 574.9097 C
96.2234 585.9425 83.6207 583.1394 78.3917 581.1999 c
76.9118 580.6094 75.4976 579.8024 74.501 579.1764 C
73.0883 578.2313 L
73.088 578.2313 L
60.4649 569.7869 L
60.4649 556.6071 L
83.9435 572.4281 L
94.9112 580.5642 112.0067 572.3675 V
111.2147 573.1271 L
f
184.9322 559.3269 m
180.038 556.0274 175.0616 552.675 173.081 551.3478 c
168.6557 548.3825 158.4104 541.0343 141.3596 549.1841 C
143.3627 547.2593 L
144.1133 546.5798 145.0253 545.7971 146.0246 545.03 c
158.2712 535.8791 171.3575 537.1946 181.1684 543.6953 c
182.5274 544.5957 183.7682 545.4218 184.9322 546.1997 C
184.9322 559.3269 L
f
184.9322 585.7248 m
174.1841 578.4959 159.6779 568.7409 156.953 566.915 c
152.5277 563.9501 142.1309 556.505 125.444 564.4769 C
127.3754 562.6214 L
127.595 562.4183 127.8137 562.2194 128.0342 562.0112 C
128.0234 561.9986 L
128.0234 561.9986 L
128.0342 562.011 L
140.9876 551.0487 155.2529 552.7271 165.0404 559.2626 c
170.558 562.9472 178.4042 568.2518 184.9322 572.6765 C
184.9322 585.7248 L
f
184.9322 611.9804 m
169.4327 601.5953 144.002 584.5562 140.9219 582.4929 c
136.4561 579.5006 125.9333 571.9436 109.4561 579.8108 C
111.4589 577.8863 L
112.6508 576.8069 114.2546 575.4617 115.9532 574.3502 c
127.3565 567.0662 139.2938 568.3524 149.0096 574.8404 c
155.993 579.5039 173.1698 590.9213 184.9322 598.7369 C
184.9322 611.9804 L
f
1 Ap
800 Ar
568 449 m
568 640.9658 L
57.0274 640.9658 L
57.0274 449 L
568 449 L
n
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

